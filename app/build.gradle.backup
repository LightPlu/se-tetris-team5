/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/9.0.0/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'jacoco'
    id 'distribution'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation libs.guava

    // Annotation processor configuration to resolve build issues
    annotationProcessor libs.guava
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit4 test framework
            useJUnit('4.13.2')
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'se.tetris.team5.App'
}

/* ✅ 팀 전체 UTF-8 인코딩 강제 설정 (운영체제 무관) */
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(JavaExec) {
    jvmArgs "-Dfile.encoding=UTF-8"
}

tasks.withType(Test) {
    systemProperty "file.encoding", "UTF-8"
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')  
    }
}

// Fat JAR 생성 - 모든 의존성을 포함한 독립 실행 가능한 JAR
task fatJar(type: Jar) {
    archiveClassifier = 'fat'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    
    // 메인 클래스 지정 및 UTF-8 인코딩 설정
    manifest {
        attributes(
            'Main-Class': 'se.tetris.team5.App',
            'Implementation-Title': 'Chainsaw Tetris Game',
            'Implementation-Version': project.version,
            'Created-By': 'Team 5'
        )
    }
    
    // 현재 프로젝트의 컴파일된 클래스 포함
    from sourceSets.main.output
    
    // 모든 런타임 의존성을 JAR에 포함
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

// 네이티브 EXE 생성
task createNativeExe {
    dependsOn fatJar
    group = 'distribution'
    description = '네이티브 Windows EXE 파일 생성 (JPackage 사용)'
    
    doLast {
        // 기존 네이티브 EXE 삭제
        def nativeDir = new File(project.buildDir, "native-exe/ChainSaw-Tetris")
        if (nativeDir.exists()) {
            nativeDir.deleteDir()
        }
        
        try {
            // JPackage로 네이티브 EXE 생성
            def jpackageCmd = [
                'jpackage',
                '--input', "${project.buildDir}/libs",
                '--name', 'ChainSaw-Tetris',
                '--main-jar', "${project.name}-fat.jar",
                '--main-class', 'se.tetris.team5.App',
                '--type', 'app-image',
                '--dest', "${project.buildDir}/native-exe",
                '--app-version', '1.0',
                '--description', 'ChainSaw Tetris Game - Team 5',
                '--vendor', 'Team 5',
                '--icon', "${project.projectDir}/src/main/resources/Tetris_icon.ico"
            ]
            
            def process = new ProcessBuilder(jpackageCmd)
                .directory(project.projectDir)
                .start()
            
            process.waitFor()
            
            if (process.exitValue() == 0) {
                println "✅ 네이티브 EXE 파일이 생성되었습니다!"
                println "📂 위치: ${project.buildDir}/native-exe/ChainSaw-Tetris/"
                println "🎮 실행: ChainSaw-Tetris.exe 더블클릭"
                println "� 아이콘: Tetris_icon.ico 적용됨"
            } else {
                throw new Exception("JPackage 실행 실패")
            }
            
        } catch (Exception e) {
            println "❌ 네이티브 EXE 생성 실패: ${e.message}"
            println "💡 Java 14+ 버전과 JPackage가 필요합니다."
        }
    }
}

// EXE 배포용 ZIP 패키지 생성
task createExeZip(type: Zip) {
    dependsOn createNativeExe
    group = 'distribution'
    description = '네이티브 EXE 배포용 ZIP 파일 생성'
    
    archiveFileName = 'ChainSaw-Tetris-Native-v1.0.zip'
    destinationDirectory = file("$buildDir/distributions")
    
    from "$buildDir/native-exe/ChainSaw-Tetris"
    
    doLast {
        println "✅ 네이티브 EXE 배포용 ZIP이 생성되었습니다:"
        println "📦 파일: $buildDir/distributions/$archiveFileName"
    }
}

// 최종 배포 패키지 생성
task packageForDistribution {
    dependsOn createExeZip
    group = 'distribution'
    description = '네이티브 EXE 배포 패키지 생성'
    
    doLast {
    dependsOn fatJar
    group = 'distribution'
    description = '진짜 .exe 파일 생성 (Launch4j 필요)'
    
    doLast {
        def exeDir = new File(project.buildDir, "exe-package")
        exeDir.mkdirs()
        
        // Launch4j XML 설정 파일 생성
        def launch4jConfig = """<?xml version="1.0" encoding="UTF-8"?>
<launch4jConfig>
  <dontWrapJar>false</dontWrapJar>
  <headerType>gui</headerType>
  <jar>${project.buildDir}/libs/${project.name}-fat.jar</jar>
  <outfile>${exeDir}/ChainSaw-Tetris.exe</outfile>
  <errTitle>ChainSaw Tetris - Error</errTitle>
  <cmdLine></cmdLine>
  <chdir>.</chdir>
  <priority>normal</priority>
  <downloadUrl>https://adoptium.net/</downloadUrl>
  <supportUrl>https://github.com/Team5</supportUrl>
  <stayAlive>false</stayAlive>
  <restartOnCrash>false</restartOnCrash>
  <manifest></manifest>
  <icon>${project.projectDir}/src/main/resources/Tetris_icon.ico</icon>
  <jre>
    <path></path>
    <bundledJre64Bit>false</bundledJre64Bit>
    <bundledJreAsFallback>false</bundledJreAsFallback>
    <minVersion>1.8.0</minVersion>
    <maxVersion></maxVersion>
    <jdkPreference>preferJre</jdkPreference>
    <runtimeBits>64/32</runtimeBits>
  </jre>
  <versionInfo>
    <fileVersion>1.0.0.0</fileVersion>
    <txtFileVersion>1.0.0</txtFileVersion>
    <fileDescription>ChainSaw Tetris Game - Team 5</fileDescription>
    <copyright>Team 5</copyright>
    <productVersion>1.0.0.0</productVersion>
    <txtProductVersion>1.0.0</txtProductVersion>
    <productName>ChainSaw Tetris</productName>
    <companyName>Team 5</companyName>
    <internalName>ChainSaw-Tetris</internalName>
    <originalFilename>ChainSaw-Tetris.exe</originalFilename>
  </versionInfo>
</launch4jConfig>"""
        
        def configFile = new File(project.buildDir, "launch4j-config.xml")
        configFile.text = launch4jConfig
        
        println "⚠️  EXE 파일 생성을 위해서는 Launch4j가 필요합니다."
        println "📥 다운로드: http://launch4j.sourceforge.net/"
        println "📄 설정 파일 생성됨: $configFile"
        println "🔧 Launch4j로 이 설정 파일을 열어서 EXE를 생성하세요."
        println ""
        println "📋 Launch4j 사용 방법:"
        println "1. Launch4j 다운로드 및 설치"
        println "2. Launch4j 실행"
        println "3. 생성된 launch4j-config.xml 파일 열기"
        println "4. Build wrapper 버튼 클릭"
        println "5. ChainSaw-Tetris.exe 파일 생성 완료!"
    }
}

// JPackage를 사용한 네이티브 실행파일 생성 (Java 14+)
task createNativeExecutable {
    dependsOn fatJar
    group = 'distribution'
    description = 'JPackage로 네이티브 실행파일 생성 (Java 14+ 필요)'
    
    doLast {
        def javaVersion = System.getProperty("java.version")
        def majorVersion = javaVersion.split('\\.')[0] as Integer
        
        if (majorVersion >= 14) {
            def packageDir = new File(project.buildDir, "native-package")
            packageDir.mkdirs()
            
            try {
                exec {
                    commandLine 'jpackage',
                        '--input', "${project.buildDir}/libs",
                        '--name', 'ChainSaw-Tetris',
                        '--main-jar', "${project.name}-fat.jar",
                        '--main-class', 'se.tetris.team5.App',
                        '--type', 'exe',
                        '--dest', packageDir.absolutePath,
                        '--win-shortcut',
                        '--win-menu',
                        '--app-version', '1.0',
                        '--description', 'ChainSaw Tetris Game - Team 5',
                        '--vendor', 'Team 5'
                }
                
                println "✅ 네이티브 EXE 파일이 생성되었습니다!"
                println "📂 위치: ${packageDir}/ChainSaw-Tetris.exe"
                
            } catch (Exception e) {
                println "❌ JPackage 실행 실패: ${e.message}"
                println "💡 Java 14+ 버전이 필요하거나 JPackage가 설치되지 않았을 수 있습니다."
            }
        } else {
            println "❌ JPackage는 Java 14 이상에서만 사용 가능합니다."
            println "📋 현재 Java 버전: $javaVersion"
            println "💡 Launch4j를 사용하거나 Java를 업그레이드하세요."
        }
    }
}

// 모든 배포 패키지를 한 번에 생성하는 통합 작업
task packageForDistribution {
    dependsOn createDistributionZip, createWindowsExe
    group = 'distribution'
    description = '게임 배포를 위한 모든 패키지 생성'
    
    doLast {
        println ""
        println "🚀 ChainSaw Tetris 배포 패키지 생성 완료!"
        println "=" * 50
        println "📁 Windows 패키지: $buildDir/windows-package/"
        println "📦 배포용 ZIP: $buildDir/distributions/ChainSaw-Tetris-v1.0-Windows.zip"
        println "⚙️  EXE 설정 파일: $buildDir/launch4j-config.xml"
        println ""
        println "🎮 사용자 실행 방법:"
        println "1. ZIP 파일을 압축 해제"
        println "2. ChainSaw-Tetris.bat 더블클릭"
        println ""
        println "🔧 EXE 파일 생성:"
        println "1. Launch4j 설치 후 설정파일로 EXE 생성"
        println "2. 또는 Java 14+에서 './gradlew createNativeExecutable' 실행"
        println ""
    }
}
